#!/bin/bash
set -euo pipefail

# test-unit-tests  -  Runs all the unit tests.
#
# Edward Smith, February 2017

scriptfile="$( cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
scriptfile="${scriptfile}"/$(basename "$0")
cd $(dirname "$scriptfile")/../Branch-TestBed
pwd

if [[ ${CLICOLOR:-0} == 1 && -t 1 ]]; then
    textBold="\e[1m"
    textBlue="\e[94m"
    textDarkBlue="\e[1m\e[34m"
    textYellow="\e[93m"
    textRed="\e[31m"
    textNormal="\e[0m"
    textDim="\e[2m"
else
    textBold=""
    textBlue=""
    textDarkBlue=""
    textYellow=""
    textRed=""
    textNormal=""
    textDim=""
fi

function testSimulatorVersion() {
    local name=$1
    local version=$2
    printf "${textBlue}Testing %s %s...${textNormal}\n" "${name}" "${version}"
    xcodebuild \
        -workspace Branch-TestBed.xcworkspace \
        -scheme Branch-TestBed \
        -destination name="${name}",OS="${version}" \
            clean test -quiet
}

stressTest=0
# stressPhone="iPhone 4s"
# stressOS="8.3"
stressPhone="iPhone 7 Plus"
xcodeversion="$(xcodebuild -version | head -n1)"
xcodeversion="${xcodeversion#Xcode }"
xcodeversion="${xcodeversion%%.*}"
if (( $xcodeversion >= 9 ))
then
    stressOS="latest"
else
    stressOS="10.3.1"
fi

function testSimulatorStress() {
    if (( $stressTest == 0 )); then
        printf "${textBlue}Start stress test...${textNormal}\n"
    fi
    let stressTest=stressTest+1
    printf "${textBlue}   Stress test %d.${textNormal}\n" $stressTest
    xcodebuild \
        -workspace Branch-TestBed.xcworkspace \
        -scheme Branch-TestBed \
        -destination name="$stressPhone",OS="$stressOS" \
            test -quiet
}

function analyzeBuild() {
    printf "${textBlue}Running static analysis...${textNormal}\n"
    xcodebuild \
        -workspace Branch-TestBed.xcworkspace \
        -scheme Branch-TestBed \
        -destination name="iPhone 7",OS=latest \
            analyze -quiet
}

function cleanAll() {
    printf "${textBlue}Cleaning all projects...${textNormal}\n"
    xcodebuild \
        -workspace Branch-TestBed.xcworkspace \
        -scheme Branch-TestBed \
        -destination name="iPhone 7",OS=latest \
            clean -quiet
    xcodebuild \
        -workspace Branch-TestBed.xcworkspace \
        -scheme Branch-SDK-Tests \
        -destination name="iPhone 7",OS=latest \
            clean -quiet
}

if (( $xcodeversion >= 8 ))
then
    : # All good.  Keep going.
else
    echo "Requires Xcode 8 or above! Use xcode-select to switch versions of Xcode." >&2
    exit 1
fi


cleanAll
analyzeBuild
printf "${textBlue}Running stress test with $stressPhone $stressOS.${textNormal}\n"
for i in {1..5}
do
    testSimulatorStress
done
if (( $xcodeversion >= 9 ))
then
    testSimulatorVersion "iPhone X"  latest
fi
testSimulatorVersion "iPhone SE" "$stressOS"
testSimulatorVersion "iPhone 6s" 10.0
testSimulatorVersion "iPhone 5"  9.3
# xctest doesn't work for iOS 8.4 in Xcode 9.3 and above.  Bummer.
if (( $xcodeversion < 9 ))
then
    testSimulatorVersion "iPhone 4s" 8.4
fi

elapsed=$(date -jur$SECONDS +%H:%M:%S)
printf "${textBlue}All tests completed successfully. Elapsed: %s.${textNormal}\n" "$elapsed"
